<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>实用工具和技巧 on Kubernetes 实践指南</title>
    <link>https://k8s.imroc.io/best-practice/useful/</link>
    <description>Recent content in 实用工具和技巧 on Kubernetes 实践指南</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    
	<atom:link href="https://k8s.imroc.io/best-practice/useful/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>kubectl 高效技巧</title>
      <link>https://k8s.imroc.io/best-practice/useful/efficient-kubectl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://k8s.imroc.io/best-practice/useful/efficient-kubectl/</guid>
      <description>k 命令 是否有过因为使用 kubectl 经常需要重复输入命名空间而苦恼？是否觉得应该要有个记住命名空间的功能，自动记住上次使用的命名空间，不需要每次都输入？可惜没有这种功能，但是，本文会教你一个非常巧妙的方法完美帮你解决这个痛点。
将如下脚本粘贴到当前shell(注册k命令到当前终端session):
function k() { cmdline=`HISTTIMEFORMAT=&amp;#34;&amp;#34; history | awk &amp;#39;$2 == &amp;#34;kubectl&amp;#34; &amp;amp;&amp;amp; (/-n/ || /--namespace/) {for(i=2;i&amp;lt;=NF;i++)printf(&amp;#34;%s &amp;#34;,$i);print &amp;#34;&amp;#34;}&amp;#39; | tail -n 1` regs=(&amp;#39;\-n [\w\-\d]+&amp;#39; &amp;#39;\-n=[\w\-\d]+&amp;#39; &amp;#39;\-\-namespace [\w\-\d]+&amp;#39; &amp;#39;\-\-namespace=[\w\-\d]+&amp;#39;) for i in &amp;#34;${!regs[@]}&amp;#34;; do reg=${regs[i]} nsarg=`echo $cmdline | grep -o -P &amp;#34;$reg&amp;#34;` if [[ &amp;#34;$nsarg&amp;#34; == &amp;#34;&amp;#34; ]]; then continue fi cmd=&amp;#34;kubectl $nsarg$@&amp;#34; echo &amp;#34;$cmd&amp;#34; $cmd return done cmd=&amp;#34;kubectl $@&amp;#34; echo &amp;#34;$cmd&amp;#34; $cmd } mac 用户可以使用 dash 的 snippets 功能快速将上面的函数粘贴，使用 kk.</description>
    </item>
    
    <item>
      <title>实用 yaml 片段</title>
      <link>https://k8s.imroc.io/best-practice/useful/yaml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://k8s.imroc.io/best-practice/useful/yaml/</guid>
      <description>最简单的 nginx 测试服务 apiVersion: apps/v1 kind: Deployment metadata: name: nginx spec: replicas: 1 selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx --- apiVersion: v1 kind: Service metadata: name: nginx labels: app: nginx spec: type: ClusterIP ports: - port: 80 protocol: TCP name: http selector: app: nginx </description>
    </item>
    
    <item>
      <title>实用命令与脚本</title>
      <link>https://k8s.imroc.io/best-practice/useful/shell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://k8s.imroc.io/best-practice/useful/shell/</guid>
      <description>获取集群所有节点占用的 podCIDR kubectl get nodes --output=jsonpath=&amp;#39;{range .items[*]}{.status.addresses[?(@.type==&amp;#34;InternalIP&amp;#34;)].address} {.spec.podCIDR} {&amp;#34;\n&amp;#34;}{end}&amp;#39; 示例输出:
10.13.132.13 10.13.140.32/27 10.13.132.14 10.13.140.64/27 10.13.133.11 10.13.140.0/27 10.13.133.12 10.13.140.96/27 10.13.133.2 10.13.140.160/27 10.13.133.4 10.13.140.128/27 将节点信息输出成表格形式 kubectl get no -o=custom-columns=INTERNAL-IP:.metadata.name,EXTERNAL-IP:.status.addresses[1].address,CIDR:.spec.podCIDR 示例输出:
INTERNAL-IP EXTERNAL-IP CIDR 10.100.12.194 152.136.146.157 10.101.64.64/27 10.100.16.11 10.100.16.11 10.101.66.224/27 10.100.16.24 10.100.16.24 10.101.64.32/27 10.100.16.26 10.100.16.26 10.101.65.0/27 10.100.16.37 10.100.16.37 10.101.64.0/27 不断尝试建立TCP连接测试网络连通性 while true; do echo &amp;#34;&amp;#34; | telnet 10.0.0.3 443; sleep 0.1; done  ctrl+c 终止测试 替换 10.0.0.3 与 443 为需要测试的 IP/域名 和端口  清理 Evicted 的 pod kubectl get pod -o wide --all-namespaces | awk &amp;#39;{if($4==&amp;#34;Evicted&amp;#34;){cmd=&amp;#34;kubectl -n &amp;#34;$1&amp;#34; delete pod &amp;#34;$2; system(cmd)}}&amp;#39; 清理非 Running 的 pod kubectl get pod -o wide --all-namespaces | awk &amp;#39;{if($4!</description>
    </item>
    
  </channel>
</rss>