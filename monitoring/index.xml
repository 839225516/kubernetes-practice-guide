<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>监控指南 on Kubernetes 实践指南</title>
    <link>https://k8s.imroc.io/monitoring/</link>
    <description>Recent content in 监控指南 on Kubernetes 实践指南</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 09 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://k8s.imroc.io/monitoring/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用 kube-promethues 快速上手集群监控</title>
      <link>https://k8s.imroc.io/monitoring/kube-prometheus-quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://k8s.imroc.io/monitoring/kube-prometheus-quickstart/</guid>
      <description>kube-prometheus 介绍 kube-prometheus 包含了在 k8s 环境下各种主流的监控组件，将其安装到集群可以快速搭建我们自己的监控系统:
 prometheus-operator: 让 prometheus 更好的适配 k8s，可直接通过创建 k8s CRD 资源来创建 prometheus 与 alertmanager 实例及其监控告警规则 (默认安装时也会创建这些 CRD 资源，也就是会自动部署 prometheus 和 alertmanager，以及它们的配置) prometheus-adapter: 让 prometheus 采集的监控数据来适配 k8s 的 resource metrics API 和 custom metrics API，kubectl top 和 HPA 功能都依赖它们。 node-exporter: 已 DaemonSet 方式部署在每个节点，将节点的各项系统指标暴露成 prometheus 能识别的格式，以便让 prometheus 采集。 kube-state-metrics: 将 k8s 的资源对象转换成 prometheus 的 metrics 格式以便让 prometheus 采集，比如 Node/Pod 的各种状态。 grafana: 可视化展示监控数据的界面。  项目地址: https://github.com/coreos/kube-prometheus
快速安装 如果只是想学习如何使用，可以参考 官方文档 一键部署到集群:</description>
    </item>
    
    <item>
      <title>PromQL 技巧</title>
      <link>https://k8s.imroc.io/monitoring/promql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://k8s.imroc.io/monitoring/promql/</guid>
      <description>复制标签名 pod_name &amp;ndash;&amp;gt; pod:
label_replace( container_cpu_system_seconds_total, &amp;quot;pod&amp;quot;, &amp;quot;$1&amp;quot;, &amp;quot;pod_name&amp;quot;, &amp;quot;(.*)&amp;quot; ) 新标签名跟其它指标:
sum by (pod)( irate( ( label_replace( container_cpu_system_seconds_total{container_name!=&amp;quot;&amp;quot;}, &amp;quot;pod&amp;quot;, &amp;quot;$1&amp;quot;, &amp;quot;pod_name&amp;quot;, &amp;quot;(.*)&amp;quot; ) * on (namespace,pod) group_left(workload,workload_type) mixin_pod_workload{namespace=&amp;quot;$namespace&amp;quot;, workload=~&amp;quot;$workload&amp;quot;, workload_type=~&amp;quot;$workload_type&amp;quot;} )[1m:15s] ) ) </description>
    </item>
    
    <item>
      <title>告警</title>
      <link>https://k8s.imroc.io/monitoring/alerting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://k8s.imroc.io/monitoring/alerting/</guid>
      <description>先将 alertmanager 配置文件 dump 下来:
kubectl -n monitoring get secret alertmanager-main -o jsonpath=&amp;#39;{.data.alertmanager\.yaml}&amp;#39; | base64 -d &amp;gt; alertmanager-main.yaml </description>
    </item>
    
  </channel>
</rss>